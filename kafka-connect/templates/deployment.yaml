apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-connect.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "kafka-connect.name" . }}
    helm.sh/chart: {{ include "kafka-connect.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kafka-connect.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kafka-connect.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "kafka-connect.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}"
          command:
          - "/bin/sh"
          args:
          - "/opt/bitnami/kafka/custConfig/connect.sh"
          ports:
            - name: connector
              containerPort: 8083
          volumeMounts:
            - name: config-connect
              mountPath: /opt/bitnami/kafka/custConfig
            - name: filesink
              mountPath: /opt/bitnami/kafka/filesink
            {{- if .Values.backup.enabled }}
            - name: config-backup
              mountPath: /opt/bitnami/kafka/backupConfig
            - name: backup
              mountPath: /mnt/backup_enc
            - name: nfs-backup
              mountPath: /mnt/backup_nfs_enc
            - name: encrypt-key
              mountPath: /etc/encrypt-key
            {{- end }}
          securityContext:
            privileged: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-connect
          configMap:
            name: {{ include "kafka-connect.fullname" . }}-connect
        - name: filesink
          persistentVolumeClaim:
              claimName: {{ include "kafka-connect.fullname" . }}-data
        {{- if .Values.backup.enabled }}
        - name: config-backup
          configMap:
            name: {{ include "kafka-connect.fullname" . }}-backup
        - name: backup
          persistentVolumeClaim:
              claimName: {{ include "kafka-connect.fullname" . }}-backup
        - name: nfs-backup
          persistentVolumeClaim:
            claimName: {{ .Values.targetPvcName }}
        - name: encrypt-key
          secret:
            secretName:  {{ include "kafka-connect.fullname" . }}-enc
        {{- end }}
      securityContext:
        fsGroup: 1001
